<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xsi:schemaLocation="http://www.springframework.org/schema/beans    
                        http://www.springframework.org/schema/beans/spring-beans-3.0.xsd    
                        http://www.springframework.org/schema/context    
                        http://www.springframework.org/schema/context/spring-context-3.0.xsd    
                        http://www.springframework.org/schema/mvc    
                        http://www.springframework.org/schema/mvc/spring-mvc-3.0.xsd">
	
	<mvc:annotation-driven />
	<!--避免IE执行AJAX时，返回JSON出现下载文件 -->
	<bean id="mappingJacksonHttpMessageConverter"
		class="org.springframework.http.converter.json.MappingJacksonHttpMessageConverter">
		<property name="supportedMediaTypes">
			<list>
				<value>text/html;charset=UTF-8</value>
			</list>
		</property>
	</bean>
	<!-- 启动SpringMVC的注解功能，完成请求和注解POJO的映射 -->
	<bean
		class="org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter">
		<property name="messageConverters">
			<list>
				<ref bean="mappingJacksonHttpMessageConverter" /> <!-- JSON转换器 -->
			</list>
		</property>
	</bean>
	<!-- 视图解析器 -->
	<!-- 定义跳转的文件的前后缀 ，视图模式配置 -->
	<!-- 自动扫描controller包下的所有类，使其认为spring mvc的控制器 -->
<context:component-scan base-package="com.training.action" />
<mvc:annotation-driven/>
    <mvc:default-servlet-handler/>  
<!-- 对模型视图名称的解析，即在模型视图名称添加前后缀    controller方法返回值+.jsp-->

	<bean
		class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<!-- 这里的配置我的理解是自动给后面action的方法return的字符串加上前缀和后缀，变成一个 可用的url地址 -->
		<property name="prefix" value="/WEB-INF/views/" />
		<property name="suffix" value=".jsp" />
	</bean>
	<!-- 异常处理 -->
	<bean id="exceptionResolver" class="org.springframework.web.servlet.handler.SimpleMappingExceptionResolver">
		<property name="defaultErrorView">
			<value>failure</value>
		</property>
		<property name="exceptionMappings">
			<props>
				<prop key="java.sql.SQLException">error</prop>
				<prop key="java.lang.RuntimeException">error</prop>
				<prop key="java.lang.Exception">error</prop>
			</props>
		</property>
	</bean>
	
	<!-- Configure the multipart resolver -->  
	<bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver" >  
	    <property name="defaultEncoding" value="UTF-8"/> <!-- 默认编码 (ISO-8859-1) -->  
	    <property name="maxInMemorySize" value="10240"/> <!-- 最大内存大小 (10240)-->  
<!--	    <property name="uploadTempDir" value="/upload/"/> &lt;!&ndash; 上传后的目录名 (WebUtils#TEMP_DIR_CONTEXT_ATTRIBUTE) &ndash;&gt;  -->
	    <property name="maxUploadSize" value="-1"/> <!-- 最大文件大小，-1为无限止(-1) -->  
	</bean> 
 
 
	<!--对静态资源文件的访问 -->
	<!-- 针对springMVC的restful风格的url而言，配置了 -->
	<!--
	<bean id="controllerInterceptor" class="com.training.common.utils.spring.ControllerInterceptor"/>
	
	<mvc:resources mapping="/assets/**" location="/assets/" />
	<mvc:resources mapping="/images/**" location="/images/" />
	<mvc:resources mapping="/css/**" location="/css/" />
	<mvc:resources mapping="/js/**" location="/js/" />
	<mvc:resources mapping="/ajax/**" location="/ajax/" />
	<mvc:resources mapping="/file/**" location="/file/" />
	<mvc:resources mapping="/fonts/**" location="/fonts/" />
	<mvc:resources mapping="/img/**" location="/img/" />
	<mvc:resources mapping="/upload/**" location="/upload/" />
	<mvc:resources mapping="/ruoyi/**" location="/ruoyi/" />

 <bean class="org.springframework.web.servlet.mvc.annotation.DefaultAnnotationHandlerMapping" >
		<property name="interceptors">
			<list>
				 
				<ref bean="controllerInterceptor"/>
			
			
			</list>
		</property>
		</bean>

  <mvc:interceptors>
        <mvc:interceptor>
            <mvc:mapping path="/**" />            
            <bean class="com.training.common.utils.spring.ControllerInterceptor"></bean>
        </mvc:interceptor>
    </mvc:interceptors>
    -->
</beans>  
